buildscript {
    ext {
        springBootVersion = '2.0.2.RELEASE'
    }
    repositories {
        mavenCentral()
        maven {
            url "http://dl.bintray.com/barryearles/maven"
        }
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "com.moowork.gradle:gradle-gulp-plugin:0.11"
        classpath "com.github.paralleltasks:parallel-tasks-gradle-plugin:1.0.1"
    }
}

plugins {
    id "org.sonarqube" version "2.6"
    id "com.moowork.node" version "1.2.0"
}

apply plugin: 'application'
apply plugin: 'jacoco'
apply plugin: 'war'
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.moowork.node'
apply plugin: 'com.github.paralleltasks'

group = 'edu.sybit.coding-camp'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
targetCompatibility = 1.8
mainClassName = 'edu.sybit.codingcamp.battleship.BattleshipApplication'

repositories {
    mavenCentral()
}

configurations {
    providedRuntime
}

node {
    download = true
    nodeModulesDir = file("${project.projectDir}/src/main/javascript")
}

dependencies {
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'org.springframework.boot:spring-boot-starter-tomcat'
    compile 'org.apache.tomcat.embed:tomcat-embed-jasper'
    compile 'org.springframework.boot:spring-boot-starter-webflux'
    compile 'org.springframework.boot:spring-boot-devtools'
    compile 'org.springframework.boot:spring-boot-starter-websocket'
    compile 'org.springframework.data:spring-data-jpa:2.0.8.RELEASE'
    compile 'org.springframework.boot:spring-boot-starter-data-jpa'
    compile 'com.google.code.gson:gson:2.7'
    compile 'javax.servlet:jstl'
    compile 'com.h2database:h2'
    compile 'javax.xml.bind:jaxb-api'
    testCompile 'org.springframework.boot:spring-boot-starter-test'
    testCompile 'io.projectreactor:reactor-test'
}

task webpackWatch(type: NpmTask, dependsOn: 'npmInstall') {
    args = ['run', 'watch']
}

task webpack(type: NpmTask, dependsOn: 'npmInstall') {
    args = ['run', 'build']
}

bootRun {
    environment SPRING_PROFILES_ACTIVE: environment.SPRING_PROFILES_ACTIVE ?: "development"
    jvmArgs = ["-agentlib:jdwp=transport=dt_socket,server=y,address=5005,suspend=n"]
}
processResources.dependsOn 'webpack'

task browsersyncServer << {
    // Start Browsersync Server
}

clean.delete << file('src/main/webapp/dist')

parallelTasks {
    taskNames = [
            "browsersyncServer",
            "webpackWatch",
            "bootRun"  // Task provided by "spring-boot" gradle plugin (e.g. apply plugin: 'spring-boot')
    ]
}
